{"version":3,"file":"static/js/172.99390b96.chunk.js","mappings":"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","sources":["utils/genreTable.js","utils/getGenresById.js","utils/getPosterPath.js","utils/getReleaseYear.js","utils/getPopularityFormat.js","utils/getGenresByName.js","utils/getVoteAverageFormat.js","utils/getProfilePath.js","utils/dataFiltered.js","components/ApiService/ApiService.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","components/AddInfo/AddInfo.styled.js","components/AddInfo/AddInfo.jsx","components/GoBackBtn/GoBackBtn.styled.js","components/GoBackBtn/GoBackBtn.jsx","pages/MoviesDetailsPage/MoviesDetailsPage.js"],"sourcesContent":["const genreTable = [\n  {\n    id: 28,\n    name: 'Action',\n  },\n  {\n    id: 12,\n    name: 'Adventure',\n  },\n  {\n    id: 16,\n    name: 'Animation',\n  },\n  {\n    id: 35,\n    name: 'Comedy',\n  },\n  {\n    id: 80,\n    name: 'Crime',\n  },\n  {\n    id: 99,\n    name: 'Documentary',\n  },\n  {\n    id: 18,\n    name: 'Drama',\n  },\n  {\n    id: 10751,\n    name: 'Family',\n  },\n  {\n    id: 14,\n    name: 'Fantasy',\n  },\n  {\n    id: 36,\n    name: 'History',\n  },\n  {\n    id: 27,\n    name: 'Horror',\n  },\n  {\n    id: 10402,\n    name: 'Music',\n  },\n  {\n    id: 9648,\n    name: 'Mystery',\n  },\n  {\n    id: 10749,\n    name: 'Romance',\n  },\n  {\n    id: 878,\n    name: 'Science Fiction',\n  },\n  {\n    id: 10770,\n    name: 'TV Movie',\n  },\n  {\n    id: 53,\n    name: 'Thriller',\n  },\n  {\n    id: 10752,\n    name: 'War',\n  },\n  {\n    id: 37,\n    name: 'Western',\n  },\n];\n\nexport default genreTable;\n","import genreTable from './genreTable';\n\nfunction getGenresById(data) {\n  return data\n    .map(element => {\n      return genreTable.find(el => el.id === element);\n    })\n    .map(el => el.name)\n    .join(', ');\n}\n\nexport default getGenresById;\n","import posterPath from '../images/poster.jpg';\nconst imagePath = 'https://image.tmdb.org/t/p/w500';\nconst defaultPath = posterPath;\n\nconst getPosterPath = urlPart => {\n  if (urlPart) {\n    return `${imagePath}${urlPart}`;\n  }\n  return defaultPath;\n};\n\nexport default getPosterPath;\n","const getReleaseYear = data => data.split('-')[0];\n\nexport default getReleaseYear;\n","const getPopularityFormat = data => Math.floor(data);\n\nexport default getPopularityFormat;\n","const getGenresByName = data => data.map(genre => genre.name).join(', ');\n\nexport default getGenresByName;\n","const getVoteAverageFormat = data => data.toFixed(1);\n\nexport default getVoteAverageFormat;\n","import profilePath from '../images/avatar.jpg';\nconst imagePath = 'https://image.tmdb.org/t/p/w500';\nconst defaultPath = profilePath;\n\nconst getProfilePath = urlPart => {\n  if (urlPart) {\n    return `${imagePath}${urlPart}`;\n  }\n  return defaultPath;\n};\n\nexport default getProfilePath;\n","import getGenresById from './getGenresById';\nimport getPosterPath from './getPosterPath';\nimport getReleaseYear from './getReleaseYear';\nimport getPopularityFormat from './getPopularityFormat';\nimport getGenresByName from './getGenresByName';\nimport getVoteAverageFormat from './getVoteAverageFormat';\nimport getProfilePath from './getProfilePath';\n\nconst dataFilter = data => {\n  const dataFiltered = data.results.map(result => {\n    return {\n      adult: result.adult,\n      genre_ids: getGenresById(result.genre_ids),\n      id: result.id,\n      poster_path: getPosterPath(result.poster_path),\n      release_date: getReleaseYear(result.release_date),\n      title: result.title.toUpperCase(),\n      vote_average: getVoteAverageFormat(result.vote_average),\n    };\n  });\n\n  const dataFilteredResponse = {\n    page: data.page,\n    results: dataFiltered,\n    total_pages: data.total_pages,\n  };\n  return dataFilteredResponse;\n};\n\nconst dataDetailsFilter = data => {\n  return {\n    budget: data.budget,\n    genres: getGenresByName(data.genres),\n    original_title: data.original_title,\n    overview: data.overview,\n    popularity: getPopularityFormat(data.popularity),\n    poster_path: getPosterPath(data.poster_path),\n    release_date: getReleaseYear(data.release_date),\n    title: data.title.toUpperCase(),\n    vote_average: getVoteAverageFormat(data.vote_average),\n    vote_count: data.vote_count,\n  };\n};\n\nconst dataCastFilter = ({ cast }) => {\n  const dataFiltered = cast.map(actor => {\n    return {\n      id: actor.id,\n      profile_path: getProfilePath(actor.profile_path),\n      name: actor.name,\n      character: actor.character,\n    };\n  });\n  return dataFiltered;\n};\n\nconst filteredAPIs = { dataFilter, dataDetailsFilter, dataCastFilter };\n\nexport default filteredAPIs;\n","import axios from 'axios';\nimport filteredAPIs from 'utils/dataFiltered';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4efc7dd075300afeff5dc61a2436592d';\n\nconst getTrending = async ({ signal }) => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`, {\n    signal: signal,\n  });\n\n  if (data.results.length === 0) {\n    throw new Error();\n  }\n\n  const dataFilter = filteredAPIs.dataFilter(data);\n  return dataFilter;\n};\n\nconst getSearchMovie = async (searchName, page) => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchName}&page=${page}&include_adult=false`\n  );\n\n  if (data.results.length === 0) {\n    throw new Error();\n  }\n\n  const dataFilter = filteredAPIs.dataFilter(data);\n  return dataFilter;\n};\n\nconst getMovieDetails = async ({ movieId, signal }) => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n    { signal: signal }\n  );\n\n  if (data.length === 0) {\n    throw new Error();\n  }\n\n  const dataFilter = filteredAPIs.dataDetailsFilter(data);\n  return dataFilter;\n};\n\nconst getMovieCredits = async ({ movieId, signal }) => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n    { signal: signal }\n  );\n\n  if (data.length === 0) {\n    throw new Error();\n  }\n\n  const dataFilter = filteredAPIs.dataCastFilter(data);\n  return dataFilter;\n};\n\nconst getMovieReviews = async ({ movieId, signal }) => {\n  const data = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    { signal: signal }\n  );\n\n  if (data.length === 0) {\n    throw new Error();\n  }\n\n  return data;\n};\n\nconst APIs = {\n  getTrending,\n  getSearchMovie,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default APIs;\n","import styled from '@emotion/styled';\n\nexport const MovieDetailsContainer = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\n\nexport const MovieDetailsImg = styled.img`\n  display: block;\n  height: 100%;\n  object-fit: cover;\n  margin-bottom: 8px;\n  border-radius: 5px;\n  height: 402px;\n  width: 280px;\n\n  @media screen and (min-width: 768px) {\n    height: 455px;\n    width: 336px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 574px;\n    width: 395px;\n    margin-bottom: 12px;\n  }\n`;\n\nexport const MovieDetailsInfoContainer = styled.div`\n  margin-left: 10px;\n`;\n\nexport const MovieDetailsAbout = styled.p`\n  @media screen and (max-width: 1279px) {\n    font-weight: 700;\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-weight: 700;\n    font-size: 24px;\n  }\n`;\n\nexport const MovieDetailsOverwiev = styled.p`\n  @media screen and (max-width: 1279px) {\n    font-weight: 400;\n    font-size: 12px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-weight: 400;\n    font-size: 16px;\n  }\n`;\n\nexport const MovieDetailsGenresTitle = styled.p`\n  @media screen and (max-width: 1279px) {\n    font-weight: 700;\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-weight: 700;\n    font-size: 24px;\n  }\n`;\n\nexport const MovieDetailsGenres = styled.p`\n  @media screen and (max-width: 1279px) {\n    font-weight: 400;\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-weight: 400;\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  MovieDetailsContainer,\n  MovieDetailsInfoContainer,\n  MovieDetailsImg,\n  MovieDetailsOverwiev,\n  MovieDetailsAbout,\n  MovieDetailsGenresTitle,\n  MovieDetailsGenres,\n} from './MovieDetails.styled';\n\nconst MovieDetails = ({ movie }) => {\n  const {\n    budget,\n    poster_path,\n    overview,\n    release_date,\n    title,\n    popularity,\n    genres,\n    original_title,\n    vote_average,\n    vote_count,\n  } = movie;\n\n  return (\n    <>\n      <MovieDetailsContainer>\n        <MovieDetailsImg src={`${poster_path}`} alt={title} />\n\n        <MovieDetailsInfoContainer>\n          <h2>{title}</h2>\n          <h4>\n            Vote / Votes: {vote_average} / {vote_count}\n          </h4>\n          <p>Release year: {release_date}</p>\n          <p>Original title: {original_title}</p>\n          <p>User Score: {popularity}</p>\n          <p>Budget: ${budget}</p>\n          <MovieDetailsAbout>ABOUT</MovieDetailsAbout>\n          <MovieDetailsOverwiev>{overview}</MovieDetailsOverwiev>\n          <MovieDetailsGenresTitle>Genres</MovieDetailsGenresTitle>\n          <MovieDetailsGenres>{genres}</MovieDetailsGenres>\n        </MovieDetailsInfoContainer>\n      </MovieDetailsContainer>\n      <hr />\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    budget: PropTypes.number.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    popularity: PropTypes.number.isRequired,\n    genres: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    vote_average: PropTypes.string.isRequired,\n    vote_count: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default MovieDetails;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const AddInfoTitle = styled.h3`\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nexport const AddInfoList = styled.ul`\n  display: flex;\n  justify-content: center;\n  list-style: none;\n  margin-bottom: 30px;\n`;\n\nexport const AddInfoItem = styled.li`\n  margin-right: 20px;\n\n  :last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const AddInfoLink = styled(Link)`\n  text-decoration: none;\n  border-radius: 5px;\n  border: 2px solid ${p => p.theme.colors.orange};\n  padding: 5px 10px;\n  color: ${p => p.theme.colors.black};\n  transition: background-color 250ms linear;\n\n  &:active {\n    background-color: ${p => p.theme.colors.orange};\n    color: white;\n  }\n\n  &:hover {\n    background-color: ${p => p.theme.colors.orange};\n    color: white;\n  }\n`;\n","import routes from 'routes';\nimport {\n  AddInfoTitle,\n  AddInfoList,\n  AddInfoItem,\n  AddInfoLink,\n} from './AddInfo.styled';\n\nconst AddInfo = () => {\n  return (\n    <>\n      <AddInfoTitle>Additional information</AddInfoTitle>\n      <AddInfoList>\n        <AddInfoItem>\n          <AddInfoLink to={`${routes.MOVIES_CAST}`}>Cast</AddInfoLink>\n        </AddInfoItem>\n        <AddInfoItem>\n          <AddInfoLink to={`${routes.MOVIES_REVIEWS}`}>Reviews</AddInfoLink>\n        </AddInfoItem>\n      </AddInfoList>\n    </>\n  );\n};\n\nexport default AddInfo;\n","import styled from '@emotion/styled';\n\nexport const GoBackBtnStyled = styled.button`\n  font-size: 14px;\n  border-radius: 5px;\n  border: 2px solid ${p => p.theme.colors.orange};\n  padding: 5px 10px;\n  background-color: ${p => p.theme.colors.white};\n  color: ${p => p.theme.colors.black};\n  margin-left: 10px;\n  transition: background-color 250ms linear;\n  margin-left: 0;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.orange};\n    color: white;\n  }\n`;\n","import { GoBackBtnStyled } from './GoBackBtn.styled';\n\nconst GoBackBtn = ({ HandleGoBack }) => {\n  return (\n    <>\n      <GoBackBtnStyled type=\"button\" onClick={HandleGoBack}>\n        Go Back\n      </GoBackBtnStyled>\n    </>\n  );\n};\n\nexport default GoBackBtn;\n","import { useState, useEffect, useRef } from 'react';\nimport { useLocation, useParams, Outlet, useNavigate } from 'react-router-dom';\nimport { Toaster, toast } from 'react-hot-toast';\nimport axios from 'axios';\nimport Loader from 'components/Loader';\nimport APIs from 'components/ApiService';\nimport MovieDetails from 'components/MovieDetails';\nimport AddInfo from 'components/AddInfo';\nimport routes from 'routes';\nimport GoBackBtn from 'components/GoBackBtn';\n\nconst MoviesDetailsPage = () => {\n  const [movie, setMovie] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backBtnLink = useRef(location.state?.from ?? routes.MOVIES);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const controller = new AbortController();\n    const FetchSearchMovie = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await APIs.getMovieDetails({\n          movieId: movieId,\n          signal: controller.signal,\n        });\n        setMovie(data);\n      } catch (error) {\n        if (axios.isCancel(error)) return;\n        setError(error.message);\n        // setError('Щось пішло не так... Спробуйте ще раз!');\n      } finally {\n        setLoading(false);\n      }\n    };\n    FetchSearchMovie();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n\n    toast.error(error);\n  }, [error]);\n\n  const HandleGoBack = () => navigate(backBtnLink.current);\n\n  return (\n    <div>\n      <GoBackBtn HandleGoBack={HandleGoBack} />\n      <hr />\n      {movie && <MovieDetails movie={movie} />}\n      {movie && <AddInfo />}\n      <hr />\n      <Outlet />\n      {loading && <Loader />}\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\n\nexport default MoviesDetailsPage;\n"],"names":["id","name","data","map","element","genreTable","el","join","defaultPath","posterPath","urlPart","split","Math","floor","genre","toFixed","profilePath","filteredAPIs","dataFilter","dataFiltered","results","result","adult","genre_ids","getGenresById","poster_path","getPosterPath","release_date","getReleaseYear","title","toUpperCase","vote_average","getVoteAverageFormat","page","total_pages","dataDetailsFilter","budget","genres","getGenresByName","original_title","overview","popularity","getPopularityFormat","vote_count","dataCastFilter","cast","actor","profile_path","getProfilePath","character","axios","API_KEY","getTrending","signal","length","Error","getSearchMovie","searchName","getMovieDetails","movieId","getMovieCredits","getMovieReviews","MovieDetailsContainer","styled","MovieDetailsImg","MovieDetailsInfoContainer","MovieDetailsAbout","MovieDetailsOverwiev","MovieDetailsGenresTitle","MovieDetailsGenres","movie","src","alt","AddInfoTitle","AddInfoList","AddInfoItem","AddInfoLink","Link","p","theme","colors","orange","black","to","routes","GoBackBtnStyled","white","HandleGoBack","type","onClick","useState","setMovie","loading","setLoading","error","setError","useParams","location","useLocation","navigate","useNavigate","backBtnLink","useRef","state","from","useEffect","controller","AbortController","FetchSearchMovie","APIs","message","abort","toast","current","Loader","position"],"sourceRoot":""}