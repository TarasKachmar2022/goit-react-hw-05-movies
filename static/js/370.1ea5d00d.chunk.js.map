{"version":3,"file":"static/js/370.1ea5d00d.chunk.js","mappings":"kNA+EA,EA/EmB,CACjB,CACEA,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,GACJC,KAAM,eAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,MACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,MACJC,KAAM,SAER,CACED,GAAI,KACJC,KAAM,WAER,CACED,GAAI,MACJC,KAAM,WAER,CACED,GAAI,IACJC,KAAM,mBAER,CACED,GAAI,MACJC,KAAM,YAER,CACED,GAAI,GACJC,KAAM,YAER,CACED,GAAI,MACJC,KAAM,OAER,CACED,GAAI,GACJC,KAAM,YChEV,MATA,SAAuBC,GACrB,OAAOA,EACJC,KAAI,SAAAC,GACH,OAAOC,EAAAA,MAAgB,SAAAC,GAAE,OAAIA,EAAGN,KAAOI,CAAd,GAC1B,IACAD,KAAI,SAAAG,GAAE,OAAIA,EAAGL,IAAP,IACNM,KAAK,KACT,E,qDCPKC,EAAcC,EASpB,EAPsB,SAAAC,GACpB,OAAIA,EACI,GAAN,OALc,mCAKd,OAAsBA,GAEjBF,CACR,ECPD,EAFuB,SAAAN,GAAI,OAAIA,EAAKS,MAAM,KAAK,EAApB,ECE3B,EAF4B,SAAAT,GAAI,OAAIU,KAAKC,MAAMX,EAAf,ECEhC,EAFwB,SAAAA,GAAI,OAAIA,EAAKC,KAAI,SAAAW,GAAK,OAAIA,EAAMb,IAAV,IAAgBM,KAAK,KAAvC,ECE5B,EAF6B,SAAAL,GAAI,OAAIA,EAAKa,QAAQ,EAAjB,E,qDCE3BP,EAAcQ,EASpB,EAPuB,SAAAN,GACrB,OAAIA,EACI,GAAN,OALc,mCAKd,OAAsBA,GAEjBF,CACR,ECgDKS,EAAe,CAAEC,WAjDJ,SAAAhB,GACjB,IAAMiB,EAAejB,EAAKkB,QAAQjB,KAAI,SAAAkB,GAEpC,OADAC,QAAQC,IAAIF,EAAOG,WACZ,CACLC,MAAOJ,EAAOI,MACdD,UAAWE,EAAcL,EAAOG,WAChCxB,GAAIqB,EAAOrB,GACX2B,YAAaC,EAAcP,EAAOM,aAClCE,aAAcC,EAAeT,EAAOQ,cACpCE,MAAOV,EAAOU,MAAMC,cACpBC,aAAcC,EAAqBb,EAAOY,cAE7C,IAOD,MAL6B,CAC3BE,KAAMjC,EAAKiC,KACXf,QAASD,EACTiB,YAAalC,EAAKkC,YAGrB,EA6BkCC,kBA3BT,SAAAnC,GACxB,MAAO,CACLoC,OAAQpC,EAAKoC,OACbC,OAAQC,EAAgBtC,EAAKqC,QAC7BE,eAAgBvC,EAAKuC,eACrBC,SAAUxC,EAAKwC,SACfC,WAAYC,EAAoB1C,EAAKyC,YACrChB,YAAaC,EAAc1B,EAAKyB,aAChCE,aAAcC,EAAe5B,EAAK2B,cAClCE,MAAO7B,EAAK6B,MAAMC,cAClBC,aAAcC,EAAqBhC,EAAK+B,cACxCY,WAAY3C,EAAK2C,WAEpB,EAcqDC,eAZ/B,SAAC,GAStB,OATmC,EAAXC,KACE5C,KAAI,SAAA6C,GAC5B,MAAO,CACLhD,GAAIgD,EAAMhD,GACViD,aAAcC,EAAeF,EAAMC,cACnChD,KAAM+C,EAAM/C,KACZkD,UAAWH,EAAMG,UAEpB,GAEF,GAID,ICxDAC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEVC,EAAW,mCAAG,kGAASC,EAAT,EAASA,OAAT,SACKH,EAAAA,EAAAA,IAAA,qCAAwCC,GAAW,CACxEE,OAAQA,IAFQ,mBAKU,KAJpBrD,EADU,EACVA,MAICkB,QAAQoC,OALC,sBAMV,IAAIC,MANM,cASZvC,EAAaD,EAAAA,WAAwBf,GATzB,kBAUXgB,GAVW,2CAAH,sDAaXwC,EAAc,mCAAG,WAAOC,EAAYxB,GAAnB,2FACEiB,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBM,EADpB,iBACuCxB,EADvC,yBADF,mBAKO,KAJpBjC,EADa,EACbA,MAICkB,QAAQoC,OALI,sBAMb,IAAIC,MANS,cASfvC,EAAaD,EAAAA,WAAwBf,GATtB,kBAUdgB,GAVc,2CAAH,wDAad0C,EAAe,mCAAG,oGAASC,EAAT,EAASA,QAASN,EAAlB,EAAkBA,OAAlB,SACCH,EAAAA,EAAAA,IAAA,gBACZS,EADY,oBACOR,EADP,mBAErB,CAAEE,OAAQA,IAHU,mBAMF,KALZrD,EADc,EACdA,MAKCsD,OANa,sBAOd,IAAIC,MAPU,cAUhBvC,EAAaD,EAAAA,kBAA+Bf,GAV5B,kBAWfgB,GAXe,2CAAH,sDAcf4C,EAAe,mCAAG,oGAASD,EAAT,EAASA,QAASN,EAAlB,EAAkBA,OAAlB,SACCH,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,EADf,mBAErB,CAAEE,OAAQA,IAHU,mBACdrD,EADc,EACdA,KAIRoB,QAAQC,IAAIrB,GACQ,IAAhBA,EAAKsD,OANa,sBAOd,IAAIC,MAPU,cAUhBvC,EAAaD,EAAAA,eAA4Bf,GAC/CoB,QAAQC,IAAIL,GAXU,kBAYfA,GAZe,4CAAH,sDAef6C,EAAe,mCAAG,gGAASF,EAAT,EAASA,QAASN,EAAlB,EAAkBA,OAAlB,SACHH,EAAAA,EAAAA,IAAA,gBACRS,EADQ,4BACmBR,EADnB,0BAEjB,CAAEE,OAAQA,IAHU,UAMF,KALdrD,EADgB,QAMbsD,OANa,sBAOd,IAAIC,MAPU,gCAUfvD,GAVe,2CAAH,sDAqBrB,EARa,CACXoD,YAAAA,EACAI,eAAAA,EACAE,gBAAAA,EACAE,gBAAAA,EACAC,gBAAAA,E,8HC5EWC,EAAgBC,EAAAA,EAAAA,GAAH,mSAWbC,GAAiBD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,kDAIdG,EAAiBH,EAAAA,EAAAA,IAAH,8WAqBdI,EAAqBJ,EAAAA,EAAAA,IAAH,wVAqBlBK,EAAiBL,EAAAA,EAAAA,GAAH,+UAOhB,SAAAM,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAUCC,EAAyBV,EAAAA,EAAAA,IAAH,oEAKtBW,EAAkBX,EAAAA,EAAAA,EAAH,0TACjB,SAAAM,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAnB,IAgBCC,EAAgBb,EAAAA,EAAAA,EAAH,mc,SC/C1B,EAtCkB,SAAC,GAAe,IAAbc,EAAY,EAAZA,MACX/E,EACN+E,EADM/E,GAAI+B,EACVgD,EADUhD,MAAOP,EACjBuD,EADiBvD,UAAWG,EAC5BoD,EAD4BpD,YAAaE,EACzCkD,EADyClD,aAAcI,EACvD8C,EADuD9C,aAEnD+C,GAAWC,EAAAA,EAAAA,MAEjB,OADA3D,QAAQC,IAAIwD,IAEV,SAACV,EAAD,WACE,SAACL,EAAD,WAEE,UAACE,EAAD,CACEgB,GAAIC,EAAAA,EAAAA,gBAAuBnF,GAC3BoF,MAAO,CAAEC,KAAML,GAFjB,WAIE,SAACZ,EAAD,CAAgBkB,IAAK3D,EAAa4D,IAAKxD,KACvC,SAACuC,EAAD,UAAiBvC,KACjB,UAAC4C,EAAD,YACE,UAACC,EAAD,WACGpD,EADH,MACiBK,MAEjB,SAACiD,EAAD,UAAgB7C,aAM3B,ECrCYuD,EAAmBvB,EAAAA,EAAAA,GAAH,+HCsB7B,EApBmB,SAAC,GAAgB,IAAdwB,EAAa,EAAbA,OACpB,OACE,+BACE,SAACD,EAAD,UACGC,GACCA,EAAOtF,KAAI,SAAA4E,GAAK,OAAI,SAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM/E,GAA1B,OAIzB,C,wMCXY0F,EAAgBzB,EAAAA,EAAAA,KAAH,sEAKb0B,EAAiB1B,EAAAA,EAAAA,MAAH,kwBAGE,SAAAM,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAnB,IAoCjBe,EAAe3B,EAAAA,EAAAA,OAAH,uSAGH,SAAAM,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAnB,IAED,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOoB,KAAnB,IACZ,SAAAtB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAKY,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAnB,IACZ,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOoB,KAAnB,I,SCNd,EA3CkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOpC,EAAP,KAAmBqC,EAAnB,KAmBA,OACE,+BACE,SAAC,KAAD,CAASC,SAAS,eAClB,UAACP,EAAD,CAAeI,SAfE,SAAAI,GACnBA,EAAEC,iBAEiB,KAAfxC,EAMJmC,EAASnC,GALPyC,EAAAA,GAAAA,MAAY,uJAMf,EAKG,WACE,SAACT,EAAD,CACEU,KAAK,OACLC,MAAO3C,EACP4C,SAzBc,SAAAL,GACpB,IAAMI,EAAQJ,EAAEM,OAAOF,MAAMG,cACxBH,GACLN,EAAcM,EACf,EAsBOI,WAAS,EACTC,aAAa,MACbC,YAAY,4BAGd,SAAChB,EAAD,CAAcS,KAAK,SAAnB,yBAIP,EC5CYQ,EAAY5C,EAAAA,EAAAA,IAAH,+CAIT6C,EAAiB7C,EAAAA,EAAAA,OAAH,8UAGL,SAAAM,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAnB,IAED,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOoB,KAAnB,IACZ,SAAAtB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAOY,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAnB,ICJzB,EAZoB,SAAC,GAAiB,IAAfkC,EAAc,EAAdA,QACrB,OACE,SAACF,EAAD,WACE,SAACC,EAAD,CAAgBT,KAAK,SAASW,QAASD,EAAvC,wBAKL,E,UCqDD,EAvDmB,WACjB,OAA4BhB,EAAAA,EAAAA,UAAS,IAArC,eAAON,EAAP,KAAewB,EAAf,KACA,GAA8BlB,EAAAA,EAAAA,WAAS,GAAvC,eAAOmB,EAAP,KAAgBC,EAAhB,KACA,GAA0BpB,EAAAA,EAAAA,UAAS,MAAnC,eAAOqB,EAAP,KAAcC,EAAd,KACA,GAAoCtB,EAAAA,EAAAA,UAAS,IAA7C,eAAOpC,EAAP,KAAmBqC,EAAnB,KACA,GAAwBD,EAAAA,EAAAA,UAAS,GAAjC,eAAO5D,EAAP,KAAamF,EAAb,KACA,GAAwCvB,EAAAA,EAAAA,UAAS,GAAjD,eAAOwB,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,uFACJ,KAAf/D,EADmB,wDAEvBwD,GAAW,GACXE,EAAS,MAHc,kBAKFM,EAAAA,EAAAA,eAAoBhE,EAAYxB,GAL9B,OAKfjC,EALe,OAMrBoB,QAAQC,IAAIrB,GACZ+G,GAAU,SAAAW,GAAS,wBAAQA,IAAR,OAAsB1H,EAAKkB,SAA3B,IACnBoG,EAAgBtH,EAAKkC,aARA,sDAUjBgB,EAAAA,EAAAA,SAAA,MAViB,mDAWrBiE,EAAS,sLAXY,yBAarBF,GAAW,GAbU,6EAAH,qDAgBtBO,GACD,GAAE,CAAC/D,EAAYxB,KAEhBsF,EAAAA,EAAAA,YAAU,WACHL,GAELhB,EAAAA,GAAAA,MAAYgB,EACb,GAAE,CAACA,IAYJ,OACE,4BACE,SAAC,EAAD,CAAWtB,SAZW,SAAAnC,GACxBqC,EAAcrC,GACd2D,EAAQ,GACRL,EAAU,GACX,KASG,SAAC,IAAD,CAAWxB,OAAQA,IAClBtD,EAAOoF,IAAgB,SAACM,EAAD,CAAad,QARd,WACzBO,GAAQ,SAAAM,GAAS,OAAIA,EAAY,CAAhB,GAClB,IAOIV,IAAW,SAACY,EAAA,EAAD,KACZ,SAAC,KAAD,CAAS7B,SAAS,gBAGvB,C","sources":["utils/genreTable.js","utils/getGenresById.js","utils/getPosterPath.js","utils/getReleaseYear.js","utils/getPopularityFormat.js","utils/getGenresByName.js","utils/getVoteAverageFormat.js","utils/getProfilePath.js","utils/dataFiltered.js","components/ApiService/ApiService.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","components/LoadMore/LoadMore.styled.js","components/LoadMore/LoadMore.jsx","pages/MoviesPage/MoviesPage.js"],"sourcesContent":["const genreTable = [\n  {\n    id: 28,\n    name: 'Action',\n  },\n  {\n    id: 12,\n    name: 'Adventure',\n  },\n  {\n    id: 16,\n    name: 'Animation',\n  },\n  {\n    id: 35,\n    name: 'Comedy',\n  },\n  {\n    id: 80,\n    name: 'Crime',\n  },\n  {\n    id: 99,\n    name: 'Documentary',\n  },\n  {\n    id: 18,\n    name: 'Drama',\n  },\n  {\n    id: 10751,\n    name: 'Family',\n  },\n  {\n    id: 14,\n    name: 'Fantasy',\n  },\n  {\n    id: 36,\n    name: 'History',\n  },\n  {\n    id: 27,\n    name: 'Horror',\n  },\n  {\n    id: 10402,\n    name: 'Music',\n  },\n  {\n    id: 9648,\n    name: 'Mystery',\n  },\n  {\n    id: 10749,\n    name: 'Romance',\n  },\n  {\n    id: 878,\n    name: 'Science Fiction',\n  },\n  {\n    id: 10770,\n    name: 'TV Movie',\n  },\n  {\n    id: 53,\n    name: 'Thriller',\n  },\n  {\n    id: 10752,\n    name: 'War',\n  },\n  {\n    id: 37,\n    name: 'Western',\n  },\n];\n\nexport default genreTable;\n","import genreTable from './genreTable';\n\nfunction getGenresById(data) {\n  return data\n    .map(element => {\n      return genreTable.find(el => el.id === element);\n    })\n    .map(el => el.name)\n    .join(', ');\n}\n\nexport default getGenresById;\n","import posterPath from '../images/poster.jpg';\nconst imagePath = 'https://image.tmdb.org/t/p/w500';\nconst defaultPath = posterPath;\n\nconst getPosterPath = urlPart => {\n  if (urlPart) {\n    return `${imagePath}${urlPart}`;\n  }\n  return defaultPath;\n};\n\nexport default getPosterPath;\n","const getReleaseYear = data => data.split('-')[0];\n\nexport default getReleaseYear;\n","const getPopularityFormat = data => Math.floor(data);\n\nexport default getPopularityFormat;\n","const getGenresByName = data => data.map(genre => genre.name).join(', ');\n\nexport default getGenresByName;\n","const getVoteAverageFormat = data => data.toFixed(1);\n\nexport default getVoteAverageFormat;\n","import profilePath from '../images/avatar.jpg';\nconst imagePath = 'https://image.tmdb.org/t/p/w500';\nconst defaultPath = profilePath;\n\nconst getProfilePath = urlPart => {\n  if (urlPart) {\n    return `${imagePath}${urlPart}`;\n  }\n  return defaultPath;\n};\n\nexport default getProfilePath;\n","import getGenresById from './getGenresById';\nimport getPosterPath from './getPosterPath';\nimport getReleaseYear from './getReleaseYear';\nimport getPopularityFormat from './getPopularityFormat';\nimport getGenresByName from './getGenresByName';\nimport getVoteAverageFormat from './getVoteAverageFormat';\nimport getProfilePath from './getProfilePath';\n\nconst dataFilter = data => {\n  const dataFiltered = data.results.map(result => {\n    console.log(result.genre_ids);\n    return {\n      adult: result.adult,\n      genre_ids: getGenresById(result.genre_ids),\n      id: result.id,\n      poster_path: getPosterPath(result.poster_path),\n      release_date: getReleaseYear(result.release_date),\n      title: result.title.toUpperCase(),\n      vote_average: getVoteAverageFormat(result.vote_average),\n    };\n  });\n\n  const dataFilteredResponse = {\n    page: data.page,\n    results: dataFiltered,\n    total_pages: data.total_pages,\n  };\n  return dataFilteredResponse;\n};\n\nconst dataDetailsFilter = data => {\n  return {\n    budget: data.budget,\n    genres: getGenresByName(data.genres),\n    original_title: data.original_title,\n    overview: data.overview,\n    popularity: getPopularityFormat(data.popularity),\n    poster_path: getPosterPath(data.poster_path),\n    release_date: getReleaseYear(data.release_date),\n    title: data.title.toUpperCase(),\n    vote_average: getVoteAverageFormat(data.vote_average),\n    vote_count: data.vote_count,\n  };\n};\n\nconst dataCastFilter = ({ cast }) => {\n  const dataFiltered = cast.map(actor => {\n    return {\n      id: actor.id,\n      profile_path: getProfilePath(actor.profile_path),\n      name: actor.name,\n      character: actor.character,\n    };\n  });\n  return dataFiltered;\n};\n\nconst filteredAPIs = { dataFilter, dataDetailsFilter, dataCastFilter };\n\nexport default filteredAPIs;\n","import axios from 'axios';\nimport filteredAPIs from 'utils/dataFiltered';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4efc7dd075300afeff5dc61a2436592d';\n\nconst getTrending = async ({ signal }) => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`, {\n    signal: signal,\n  });\n\n  if (data.results.length === 0) {\n    throw new Error();\n  }\n\n  const dataFilter = filteredAPIs.dataFilter(data);\n  return dataFilter;\n};\n\nconst getSearchMovie = async (searchName, page) => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchName}&page=${page}&include_adult=false`\n  );\n\n  if (data.results.length === 0) {\n    throw new Error();\n  }\n\n  const dataFilter = filteredAPIs.dataFilter(data);\n  return dataFilter;\n};\n\nconst getMovieDetails = async ({ movieId, signal }) => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n    { signal: signal }\n  );\n\n  if (data.length === 0) {\n    throw new Error();\n  }\n\n  const dataFilter = filteredAPIs.dataDetailsFilter(data);\n  return dataFilter;\n};\n\nconst getMovieCredits = async ({ movieId, signal }) => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n    { signal: signal }\n  );\n  console.log(data);\n  if (data.length === 0) {\n    throw new Error();\n  }\n\n  const dataFilter = filteredAPIs.dataCastFilter(data);\n  console.log(dataFilter);\n  return dataFilter;\n};\n\nconst getMovieReviews = async ({ movieId, signal }) => {\n  const data = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    { signal: signal }\n  );\n\n  if (data.length === 0) {\n    throw new Error();\n  }\n\n  return data;\n};\n\nconst APIs = {\n  getTrending,\n  getSearchMovie,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default APIs;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieCardItem = styled.li`\n  display: block;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  box-shadow: 0px 1px 3px 0px #00000033, 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n    0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const NavigationLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieCardImage = styled.img`\n  display: block;\n  height: 100%;\n  object-fit: cover;\n  margin-bottom: 8px;\n  border-radius: 5px;\n  height: 402px;\n  width: 280px;\n\n  @media screen and (min-width: 768px) {\n    height: 455px;\n    width: 336px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 574px;\n    width: 395px;\n    margin-bottom: 12px;\n  }\n`;\n\nexport const MovieCardContainer = styled.div`\n  display: block;\n  transition: transform 250ms linear;\n  overflow: hidden;\n  width: 280px;\n  text-decoration: none;\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n  }\n`;\n\nexport const MovieCardTitle = styled.h3`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.black};\n  text-decoration: none;\n  margin: 0;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    line-height: calc(24 / 20);\n  }\n`;\n\nexport const MovieCardContainerInfo = styled.div`\n  display: flex;\n  align-items: baseline;\n`;\n\nexport const MovieCardGenres = styled.p`\n  color: ${p => p.theme.colors.orange};\n  margin: 0;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n  justify-content: center;\n  color: #ff6b08;\n  max-width: 290px;\n  margin: 0;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    line-height: calc(24 / 20);\n    max-width: 345px;\n  }\n`;\n\nexport const MovieCardVote = styled.p`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  border-radius: 5px;\n  color: #ffffff;\n  background-color: #ff6b08;\n  text-align: center;\n  width: 36px;\n  height: 16px;\n  margin-left: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 1280px) {\n    width: 40px;\n    height: 20px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport routes from 'routes';\nimport {\n  MovieCardItem,\n  NavigationLink,\n  MovieCardImage,\n  MovieCardContainer,\n  MovieCardTitle,\n  MovieCardContainerInfo,\n  MovieCardGenres,\n  MovieCardVote,\n} from './MovieCard.styled';\n\nconst MovieCard = ({ movie }) => {\n  const { id, title, genre_ids, poster_path, release_date, vote_average } =\n    movie;\n  const location = useLocation();\n  console.log(movie);\n  return (\n    <MovieCardContainer>\n      <MovieCardItem>\n        {/* <Link to={`${routes.MOVIES}/${movie.id}`} state={{ from: location }}> */}\n        <NavigationLink\n          to={routes.STATIC_MOVIE_ID(id)}\n          state={{ from: location }}\n        >\n          <MovieCardImage src={poster_path} alt={title} />\n          <MovieCardTitle>{title}</MovieCardTitle>\n          <MovieCardContainerInfo>\n            <MovieCardGenres>\n              {genre_ids} | {release_date}\n            </MovieCardGenres>\n            <MovieCardVote>{vote_average}</MovieCardVote>\n          </MovieCardContainerInfo>\n        </NavigationLink>\n      </MovieCardItem>\n    </MovieCardContainer>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    genre_ids: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\n\nexport const MoviesListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: start;\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport MovieCard from 'components/MovieCard';\nimport { MoviesListStyled } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <>\n      <MoviesListStyled>\n        {movies &&\n          movies.map(movie => <MovieCard key={movie.id} movie={movie} />)}\n      </MoviesListStyled>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      movie: PropTypes.object,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const SearchbarForm = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const SearchbarInput = styled.input`\n  background-color: transparent;\n  border-width: 0;\n  border-bottom: 2px solid ${p => p.theme.colors.orange};\n\n  transition: border-bottom-color 500ms linear;\n\n  &:hover {\n    border-bottom-color: red;\n  }\n\n  &:focus {\n    outline: none;\n    background-color: transparent;\n  }\n\n  @media screen and (min-width: 320px) {\n    width: 280px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 300px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.14;\n    display: flex;\n    align-items: center;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 300px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.14;\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const SearchbarBtn = styled.button`\n  text-decoration: none;\n  border-radius: 5px;\n  border: 2px solid ${p => p.theme.colors.orange};\n  padding: 5px 10px;\n  background-color: ${p => p.theme.colors.white};\n  color: ${p => p.theme.colors.black};\n  margin-left: 10px;\n  transition: background-color 250ms linear;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.orange};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import { useState } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport {\n  SearchbarBtn,\n  SearchbarInput,\n  SearchbarForm,\n} from './Searchbar.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchName, setSearchName] = useState('');\n  const onInputChange = e => {\n    const value = e.target.value.toLowerCase();\n    if (!value) return;\n    setSearchName(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchName === '') {\n      toast.error('Введіть значення для пошуку!');\n      //   alert('Введіть значення для пошуку!');\n      return;\n    }\n\n    onSubmit(searchName);\n  };\n\n  return (\n    <header>\n      <Toaster position=\"top-right\" />\n      <SearchbarForm onSubmit={handleSubmit}>\n        <SearchbarInput\n          type=\"text\"\n          value={searchName}\n          onChange={onInputChange}\n          autoFocus\n          autoComplete=\"off\"\n          placeholder=\"Enter name of movie...\"\n        />\n\n        <SearchbarBtn type=\"submit\">Search</SearchbarBtn>\n      </SearchbarForm>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  text-align: center;\n`;\n\nexport const LoadMoreStyled = styled.button`\n  font-size: 14px;\n  border-radius: 5px;\n  border: 2px solid ${p => p.theme.colors.orange};\n  padding: 5px 10px;\n  background-color: ${p => p.theme.colors.white};\n  color: ${p => p.theme.colors.black};\n  margin-left: 10px;\n  transition: background-color 250ms linear;\n  margin-bottom: 20px;\n  margin-left: 0;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.orange};\n    color: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Container, LoadMoreStyled } from './LoadMore.styled';\n\nconst LoadMoreBtn = ({ addPage }) => {\n  return (\n    <Container>\n      <LoadMoreStyled type=\"button\" onClick={addPage}>\n        Load More\n      </LoadMoreStyled>\n    </Container>\n  );\n};\n\nLoadMoreBtn.propTypes = { addPage: PropTypes.func.isRequired };\n\nexport default LoadMoreBtn;\n","import { useEffect, useState } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport axios from 'axios';\nimport Loader from 'components/Loader';\nimport APIs from 'components/ApiService';\nimport Searchbar from 'components/Searchbar';\nimport LoadMoreBtn from 'components/LoadMore';\nimport MovieList from 'components/MoviesList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchName, setSearchName] = useState('');\n  const [page, setPage] = useState(1);\n  const [pageQuantity, setPageQuantity] = useState(0);\n\n  useEffect(() => {\n    const FetchSearchMovie = async () => {\n      if (searchName === '') return;\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await APIs.getSearchMovie(searchName, page);\n        console.log(data);\n        setMovies(prevState => [...prevState, ...data.results]);\n        setPageQuantity(data.total_pages);\n      } catch (error) {\n        if (axios.isCancel(error)) return;\n        setError('Щось пішло не так... Спробуйте ще раз!');\n      } finally {\n        setLoading(false);\n      }\n    };\n    FetchSearchMovie();\n  }, [searchName, page]);\n\n  useEffect(() => {\n    if (!error) return;\n\n    toast.error(error);\n  }, [error]);\n\n  const formHandlerSubmit = searchName => {\n    setSearchName(searchName);\n    setPage(1);\n    setMovies([]);\n  };\n\n  const onChangePageNumber = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={formHandlerSubmit} />\n      <MovieList movies={movies} />\n      {page < pageQuantity && <LoadMoreBtn addPage={onChangePageNumber} />}\n      {loading && <Loader />}\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["id","name","data","map","element","genreTable","el","join","defaultPath","posterPath","urlPart","split","Math","floor","genre","toFixed","profilePath","filteredAPIs","dataFilter","dataFiltered","results","result","console","log","genre_ids","adult","getGenresById","poster_path","getPosterPath","release_date","getReleaseYear","title","toUpperCase","vote_average","getVoteAverageFormat","page","total_pages","dataDetailsFilter","budget","genres","getGenresByName","original_title","overview","popularity","getPopularityFormat","vote_count","dataCastFilter","cast","actor","profile_path","getProfilePath","character","axios","API_KEY","getTrending","signal","length","Error","getSearchMovie","searchName","getMovieDetails","movieId","getMovieCredits","getMovieReviews","MovieCardItem","styled","NavigationLink","Link","MovieCardImage","MovieCardContainer","MovieCardTitle","p","theme","colors","black","MovieCardContainerInfo","MovieCardGenres","orange","MovieCardVote","movie","location","useLocation","to","routes","state","from","src","alt","MoviesListStyled","movies","SearchbarForm","SearchbarInput","SearchbarBtn","white","onSubmit","useState","setSearchName","position","e","preventDefault","toast","type","value","onChange","target","toLowerCase","autoFocus","autoComplete","placeholder","Container","LoadMoreStyled","addPage","onClick","setMovies","loading","setLoading","error","setError","setPage","pageQuantity","setPageQuantity","useEffect","FetchSearchMovie","APIs","prevState","LoadMore","Loader"],"sourceRoot":""}